Niestety 1
funkcja 1
phfwdReverse 1
nie 1
wyznacza 1
przeciwobrazu 1
funkcji 1
phfwdGet. 1
Jeśli 1
phfwdGet(x) 1
= 1
y, 1
to 1
x 1
należy 1
do 1
wyniku 1
phfwdReverse(y). 1
Implikacja 1
w 1
drugą 1
stronę 1
nie 1
zachodzi. 1
Należy 1
zaimplementować 1
funkcję 1
PhoneNumbers 1
* 1
phfwdGetReverse(PhoneForward 1
const 1
*pf, 1
char 1
const 1
*num); 1
która 1
dla 1
podanej 1
za 1
pomocą 1
wskaźnika 1
pf 1
bazy 1
przekierowań 1
i 1
podanego 1
numeru 1
telefonu 1
num 1
wyznacza 1
posortowaną 1
leksykograficznie 1
listę 1
wszystkich 1
takich 1
numerów 1
telefonów 1
i 1
tylko 1
takich 1
numerów 1
telefonów 1
x, 1
że 1
phfwdGet(x) 1
= 1
num. 1
Funkcja 1
ta 1
alokuje 1
strukturę 1
PhoneNumbers, 1
która 1
musi 1
być 1
zwolniona 1
za 1
pomocą 1
funkcji 1
phnumDelete. 1
Wynikiem 1
funkcji 1
jest 1
NULL, 1
gdy 1
nie 1
udało 1
się 1
alokować 1
pamięci. 1
Jeśli 1
podany 1
napis 1
num 1
nie 1
reprezentuje 1
numeru, 1
wynikiem 1
jest 1
pusty 1
ciąg. 1
Należy 1
w 1
następujący 1
sposób 1
ujednolicić 1
reakcję 1
na 1
parametr 1
o 1
wartości 1
NULL. 1
Wynik 1
funkcji 1
phfwdAdd 1
jest 1
false, 1
gdy 1
parametr 1
pf 1
ma 1
wartość 1
NULL. 1
Funkcje 1
phfwdDelete, 1
phfwdRemove 1
nic 1
nie 1
robią, 1
gdy 1
parametr 1
pf 1
ma 1
wartość 1
NULL. 1
Wynik 1
funkcji 1
phfwdGet, 1
phfwdGetReverse, 1
phfwdReverse 1
jest 1
NULL, 1
gdy 1
parametr 1
pf 1
ma 1
wartość 1
NULL. 1
Funkcja 1
phnumDelete 1
nic 1
nie 1
robi, 1
gdy 1
parametr 1
pnum 1
ma 1
wartość 1
NULL. 1
Wynik 1
funkcji 1
phnumGet 1
jest 1
NULL, 1
gdy 1
parametr 1
pnum 1
ma 1
wartość 1
NULL. 1
Należy 1
poprawić 1
i 1
uzupełnić 1
dokumentację, 1
aby 1
opisywała 1
faktyczne 1
działanie 1
poszczególnych 1
operacji. 1
W 1
szczególności 1
należy 1
uwzględnić 1
wyjaśnienia, 1
które 1
pojawiły 1
się 1
lub 1
pojawią 1
się 1
na 1
forum. 1
Ponadto 1
w 1
trzeciej 1
części 1
zadania 1
oczekujemy 1
poprawienia 1
ewentualnych 1
błędów 1
z 1
poprzednich 1
części 1
zadania. 1
